// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(in = load, sel = address, a = load0, b = load1, c = load2, d = load3, e = load4, f = load5, g = load6, h = load7);

    Register(in = in, load = load0, out = r0out);
    Register(in = in, load = load1, out = r1out);
    Register(in = in, load = load2, out = r2out);
    Register(in = in, load = load3, out = r3out);
    Register(in = in, load = load4, out = r4out);
    Register(in = in, load = load5, out = r5out);
    Register(in = in, load = load6, out = r6out);
    Register(in = in, load = load7, out = r7out);

    Mux8Way16 (a = r0out, b = r1out, c = r2out, d = r3out, e = r4out, f = r5out, g = r6out, h = r7out, sel = address, out = out);


    //CHIP DMux8Way {
    //IN in, sel[3];
    //OUT a, b, c, d, e, f, g, h;

    //PARTS:
    //DMux (in = in, sel = sel[0], a = aceg, b = bdfh);
    //DMux (in = aceg, sel = sel[1], a = ae, b = cg);
    //DMux (in = bdfh, sel = sel[1], a = bf, b = dh);
    //DMux (in = ae, sel = sel[2], a = a, b = e);
    //DMux (in = cg, sel = sel[2], a = c, b = g);
    //DMux (in = bf, sel = sel[2], a = b, b = f);
    //DMux (in = dh, sel = sel[2], a = d, b = h);


    //CHIP Mux8Way16 {
    //IN a[16], b[16], c[16], d[16],
    //  e[16], f[16], g[16], h[16],
    //   sel[3];
    //OUT out[16];

    //PARTS:
    //Mux16 (a = a, b = b, sel = address[0], out = outab);
    //Mux16 (a = c, b = d, sel = address[0], out = outcd);
    //Mux16 (a = e, b = f, sel = sel[0], out = outef);
    //Mux16 (a = g, b = h, sel = sel[0], out = outgh);
    //Mux16 (a = outab, b = outcd, sel = sel[1], out = outabcd);
    //Mux16 (a = outef, b = outgh, sel = sel[1], out = outefgh);
    //Mux16 (a = outabcd, b = outefgh, sel = sel[2], out = out);

}